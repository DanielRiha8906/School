load("C:/Users/danie/Desktop/Škola - kódy/PAS/PAS/Stulong.RData")
# Nacteni databaze Stulong.RData
# oprava nazvu promennych v souboru
names(Stulong)<-c("ID","vyska","vaha","syst1","syst2","chlst","vino","cukr","bmi",
"vek","KOURrisk","Skupina","VekK")
# aktivace knihovny s popisnymi statistikami
library(DescTools)
##########################
### Hledani modusu
## Diskretni promenna s mnoha kategoriemi
prom1<-Stulong$vek
# Frekvencni polygon
x.val<-sort(unique(prom1))
ac<-table(prom1)
plot(x.val,ac,type="h",lwd=3,col="darkgreen",main="Frekvencni polygon",
xlab="Vek v rocich",ylab="Absolutni cetnosti")
lines(x.val,ac,col="red")
# zde je asi mozne urcit modus jako vek s nejvyssi cetnosti
Mode(prom1)
# pomoci funkce z knihovny DescTools
x.val[which.max(ac)]
hist(prom1,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Vek v rocich")
meze<-hist(prom1,plot=F)$breaks
pocty<-hist(prom1,plot=F)$counts
m<-which.max(pocty)
(A<-meze[m])
(h<-meze[2]-meze[1])
(d0<-pocty[m]-pocty[m-1])
(d1<-pocty[m]-pocty[m+1])
(modus<- A + h*d0/(d0+d1))
View(Stulong)
prom <- Stulong$syst1
meze<-hist(prom1,plot=F)$breaks
pocty<-hist(prom1,plot=F)$counts
m<-which.max(pocty)
(A<-meze[m])
(h<-meze[2]-meze[1])
(d0<-pocty[m]-pocty[m-1])
(d1<-pocty[m]-pocty[m+1])
(modus<- A + h*d0/(d0+d1))
prom <- Stulong$syst1
meze<-hist(prom,plot=F)$breaks
pocty<-hist(prom,plot=F)$counts
m<-which.max(pocty)
(A<-meze[m])
(h<-meze[2]-meze[1])
(d0<-pocty[m]-pocty[m-1])
(d1<-pocty[m]-pocty[m+1])
(modus<- A + h*d0/(d0+d1))
hist(prom1,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Vek v rocich")
hist(prom,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Vek v rocich")
hist(prom,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Systolický Tlak"
)
prom <- Stulong$cukr
hist(prom,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Systolický Tlak")
meze<-hist(prom,plot=F)$breaks
pocty<-hist(prom,plot=F)$counts
m<-which.max(pocty)
(A<-meze[m])
(h<-meze[2]-meze[1])
(d0<-pocty[m]-pocty[m-1])
(d1<-pocty[m]-pocty[m+1])
(modus<- A + h*d0/(d0+d1))
prom <- Stulong$cukr
hist(prom,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Nejaka Štatistika o cukru")
meze<-hist(prom,plot=F)$breaks
pocty<-hist(prom,plot=F)$counts
m<-which.max(pocty)
(A<-meze[m])
(h<-meze[2]-meze[1])
(d0<-pocty[m]-pocty[m-1])
(d1<-pocty[m]-pocty[m+1])
(modus<- A + h*d0/(d0+d1))
prom <- Stulong$cukr
hist(prom,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Nejaka Štatistika o cukru")
meze<-hist(prom,plot=F)$breaks
pocty<-hist(prom,plot=F)$counts
m<-which.max(pocty)
(A<-meze[m])
(h<-meze[2]-meze[1])
(d0<-0)
(d1<-pocty[m]-pocty[m+1])
(modus<- A + h*d0/(d0+d1))
prom <- Stulong$cukr
hist(prom,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Nejaka Štatistika o cukru")
meze<-hist(prom,plot=F)$breaks
pocty<-hist(prom,plot=F)$counts
m<-which.max(pocty)
(A<-meze[m])
(h<-meze[2]-meze[1])
(d0<-pocty[m] -0)
(d1<-pocty[m]-pocty[m+1])
(modus<- A + h*d0/(d0+d1))
# pracujte s vyskou jako se spojitou promennou a hledejte modus
prom2<-Stulong$vyska
hist(prom2,col="skyblue",border="darkblue",main="Histogram",ylab="Hustota",
xlab="Vyska v cm",freq=F)
hist(prom2,col="skyblue",border="darkblue",main="Histogram",ylab="Hustota",
xlab="Vyska v cm",breaks=15,freq=F)
# prolozime jadrovy odhad hustoty
(jadro<-density(prom2))
lines(jadro,col=2)
# chceme hladsi funkci? musime zmenit bandwidth
(jadro<-density(prom2,bw="sj"))
lines(jadro,col=3)
(jadro<-density(prom2,bw=3))
lines(jadro,col=4)
(jadro<-density(prom2,bw=5))
lines(jadro,col=5)
(jadro<-density(prom2,bw=5,lw=5)
)
(jadro<-density(prom2,bw=5,lwd=5))
(jadro<-density(prom2,bw=2))
lines(jadro,col=2)
# kde ma odhad hustoty maximum?
jadro$x[which.max(jadro$y)]
# kde ma odhad hustoty maximum?
jadro$x[which.max(jadro$y)]
prome <- Stulong$bmi
hist(prome, col="skyblue", border="darkblue", main = "Histogram", ylab="BMI", xlab="Vyska v cm", breaks=15, freq=F)
jadro <- density(prome,bw=2)
lines(jadro,col=4)
jadro$x[which.max(jadro$y)]
prome <- Stulong$vaha
hist(prome, col="skyblue", border="darkblue", main = "Histogram", ylab="BMI", xlab="vaha v kg", breaks=15, freq=F)
jadro <- density(prome,bw=2)
lines(jadro,col=4)
jadro$x[which.max(jadro$y)]
prome <- Stulong$vaha
hist(prome, col="skyblue", border="darkblue", main = "Histogram", ylab="BMI", xlab="vaha v kg", breaks=15, freq=F)
jadro <- density(prome,bw=4)
lines(jadro,col=4)
jadro$x[which.max(jadro$y)]
lines(jadro,col=4, lwd=5)
lines(jadro,col=4, lwd=20)
lines(jadro,col=4, lwd=2)
prome <- Stulong$vaha
hist(prome, col="skyblue", border="darkblue", main = "Histogram", ylab="BMI", xlab="vaha v kg", breaks=15, freq=F)
jadro <- density(prome,bw=4)
lines(jadro,col=4, lwd=2)
jadro$x[which.max(jadro$y)]
# Ma promenna vyska odlehle hodnoty
prom3<-Stulong$vyska
#   A je jeji rozdeleni jednovrcholove nebo vicevrcholove?
hist(prom3,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Vyska v cm",breaks=15)
boxplot(prom3,col="yellow",border="orange3",main="Krabicovy graf",
ylab="Vyska v cm")
boxplot(prom3,col="yellow",border="orange3",main="Krabicovy graf",
ylab="Vyska v cm", range=3)
(DM<-quantile(prom3,0.25) - 1.5*IQR(prom3))
prom3[prom3<DM]
(HM<-quantile(prom3,0.75) + 1.5*IQR(prom3))
prom3[prom3>HM]
(DM<-quantile(prom3,0.25) - 3*IQR(prom3))
prom3[prom3<DM]
(HM<-quantile(prom3,0.75) + 3*IQR(prom3))
prom3[prom3>HM]
(DM<-mean(prom3) - 3*sd(prom3))
prom3[prom3<DM]
(HM<-mean(prom3) + 3*sd(prom3))
prom3[prom3>HM]
# A jak jsou na tom odlehla pozorovani pro vahu?
prom3<-Stulong$vaha
hist(prom3,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Vyska v cm",breaks=15)
boxplot(prom3,col="yellow",border="orange3",main="Krabicovy graf",
ylab="Vyska v cm")
boxplot(prom3,col="yellow",border="orange3",main="Krabicovy graf",
ylab="Vyska v cm")
boxplot(prom3,col="yellow",border="orange3",main="Krabicovy graf",
ylab="Vyska v cm", range=3)
(DM<-quantile(prom3,0.25) - 1.5*IQR(prom3))
(HM<-quantile(prom3,0.75) + 1.5*IQR(prom3))
prom3[prom3>HM]
(DM<-quantile(prom3,0.25) - 3*IQR(prom3))
prom3[prom3<DM]
(HM<-quantile(prom3,0.75) + 3*IQR(prom3))
prom3[prom3>HM]
(DM<-mean(prom3) - 3*sd(prom3))
prom3[prom3<DM]
(HM<-mean(prom3) + 3*sd(prom3))
prom3[prom3>HM]
hist(prom3,col="skyblue",border="darkblue",main="Histogram",ylab="Absolutni cetnosti",
xlab="Vyska v cm",breaks=15)
(DM<-quantile(prom3,0.25) - 1.5*IQR(prom3))
prom3[prom3<DM]
(HM<-quantile(prom3,0.75) + 1.5*IQR(prom3))
prom3[prom3>HM]
rm(list = ls())
# nactete databazi Stulong
names(Stulong)<-c("ID","vyska","vaha","syst1","syst2","chlst","vino","cukr",
"bmi","vek","KOURrisk","Skupina","VekK")
load("C:/Users/danie/Desktop/Škola - kódy/PAS/PAS/Stulong.RData")
names(Stulong)<-c("ID","vyska","vaha","syst1","syst2","chlst","vino","cukr",
"bmi","vek","KOURrisk","Skupina","VekK")
library(DescTools)
# Ohodnotte normalitu promenne vaha
prom1<-Stulong$vaha
hist(prom1,main="Histogram",xlab="Vaha v kg",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
hist(prom1,main="Histogram",xlab="Vaha v kg",ylab="Hustota",
col="skyblue",border="darkblue",freq=F)
# je treba vykreslit histogram prepocteny na hustotu
lines(x<-seq(50,140,by=0.2),dnorm(x,mean(prom1),sd(prom1)),col=2)
# Q-Q plot - Quantile Comparison plot
PlotQQ(prom1)
# jsou v datech odlehle hodnoty?
Q1<-quantile(prom1,1/4)
Q3<-quantile(prom1,3/4)
# kandidati na odlehle hodnoty
(mez<-Q3+1.5*IQR(prom1))
prom1[prom1>mez]
# odlehle hodnoty
(mez<-Q3+3*IQR(prom1))
prom1[prom1>mez]
# podle histogramu normalite vadi hodnoty vyssi nez 110
# jak vypada Q-Q Plot bez techto hodnot?
PlotQQ(prom1[prom1<=110])
# podle histogramu normalite vadi hodnoty vyssi nez 110
# jak vypada Q-Q Plot bez techto hodnot?
PlotQQ(prom1[prom1<=120])
# jak omezit vliv odlehlych hodnot na prumer?
# spoctete useknuty prumer tak, ze vynechate hodnoty vetsi nez 110
sum(prom1>120)/length(prom1)
# jak omezit vliv odlehlych hodnot na prumer?
# spoctete useknuty prumer tak, ze vynechate hodnoty vetsi nez 110
sum(prom1>0)/length(prom1)
0.03144654*954
# procento hodnot vetsich nez 110
mean(prom1,trim=0.0116)
# podle histogramu normalite vadi hodnoty vyssi nez 110
# jak vypada Q-Q Plot bez techto hodnot?
PlotQQ(prom1[prom1<=110])
# podle histogramu normalite vadi hodnoty vyssi nez 110
# jak vypada Q-Q Plot bez techto hodnot?
PlotQQ(prom1[prom1<=120])
# podle histogramu normalite vadi hodnoty vyssi nez 110
# jak vypada Q-Q Plot bez techto hodnot?
PlotQQ(prom1[prom1<=110])
# podle histogramu normalite vadi hodnoty vyssi nez 110
# jak vypada Q-Q Plot bez techto hodnot?
PlotQQ(prom1[prom1<=100])
PlotQQ(prom1)
hist(prom1,main="Histogram",xlab="Systolický tlak",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
hist(prom1,main="Histogram",xlab="Systolický tlak",ylab="Hustota",
col="skyblue",border="darkblue",freq=F)
## Jak je to s normalitou promenne syst1?
prom1 <- Stulong$syst1
hist(prom1,main="Histogram",xlab="Systolický tlak",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
hist(prom1,main="Histogram",xlab="Systolický tlak",ylab="Hustota",
col="skyblue",border="darkblue",freq=F)
Skew(prom1)
Kurt(prom1)
PlotQQ(prom1)
Q1 <- quantile(prom1, 1/4)
Q3 <- quantile(prom1, 3/4)
Q3+1,5*IQR(prom1)
mez <- Q3+1,5*IQR(prom1)
mez <- Q3+1.5*IQR(prom1)
mez
prom1[prom1>mez]
mez <- Q3+3*IQR(prom1)
prom1[prom1>mez]
plotqq(prom1<mez)
PlotQQ(prom1<mez)
sum(prom1>200)/length(prom1)
sum(prom1>180)/length(prom1)
mean(prom1,trim=0,17)
mean(prom1)
mean(prom1,trim=0,17)
mean(prom1)
PlotQQ(prom1[prom1<=180])
PlotQQ(prom1)
hist(prom1,main="Histogram",xlab="Systolický tlak",ylab="Hustota",
col="skyblue",border="darkblue",freq=F)
lines(x<-seq(90,230,by=0.2),dnorm(x,mean(prom1),sd(prom1)),col=2)
sum(prom1>=180)/length(prom1)
mean(prom1,trim=0,023)
mean(prom1)
PlotQQ(prom1[prom1<=180])
hist(prom1[prom1<=180],main="Histogram",xlab="Systolický tlak s hodnoty pod 180",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
promlog<- log(Stulong$syst1)
hist(prom1[prom1<=180],main="Histogram",xlab="Systolický tlak s hodnoty pod 180",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
hist(promlog,main="Histogram",xlab="Systolický tlak",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
hist(promlog,main="Histogram",xlab="Systolický tlak",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
lines(x<-seq(4.4,5.4,by=0.2),dnorm(x,mean(prom1),sd(prom1)),col=2)
hist(promlog,main="Histogram",xlab="Systolický tlak",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
lines(x<-seq(90,230,by=0.2),dnorm(x,mean(prom1),sd(prom1)),col=2)
hist(promlog,main="Histogram",xlab="Systolický tlak",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
lines(x<-seq(4.4,5,6,by=0.002),dnorm(x,mean(prom1),sd(prom1)),col=2)
hist(promlog,main="Histogram",xlab="Systolický tlak",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
lines(x<-seq(4.4,5.6,by=0.002),dnorm(x,mean(prom1),sd(prom1)),col=2)
hist(promlog,main="Histogram",xlab="Systolický tlak",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
lines(x<-seq(4.4,5.6,by=0.002),dnorm(x,mean(promlog),sd(promlog)),col=2)
promlog<- log(Stulong$syst1)
hist(promlog,main="Histogram",xlab="Systolický tlak",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
lines(x<-seq(4.4,5.6,by=0.002),dnorm(x,mean(promlog),sd(promlog)),col=2)
PlotQQ(promlog)
## Obdobne pro promennou cukr.
cukr<- Stulong$cukr
PlotQQ(cukr)
cukr
Max(cukr)
max(cukr)
cukr2<- log(Stulong$cukr)
PlotQQ(cukr2)
cukr2<- exp(cukr)
PlotQQ(cukr2)
hist(cukr2, main='Histogram',xlab='Cukr',ylab='hustota', col='skyblue',border='darkblue',freg=F)
hist(cukr2, main='Histogram',xlab='Cukr',ylab='hustota', col='skyblue',border='darkblue',freq=F)
hist(cukr, main='Histogram',xlab='Cukr',ylab='hustota', col='skyblue',border='darkblue',freq=F)
hist(cukr, main='Histogram',xlab='Cukr',ylab='hustota', col='skyblue',border='darkblue',freq=F)
lines(x<-seq(0,30,by=0,02),dnorm(x,mean(cukr),sd(promlog)),col=2)
lines(x<-seq(0,30,by=0.02),dnorm(x,mean(cukr),sd(promlog)),col=2)
lines(x<-seq(0,30,by=0.02),dnorm(x,mean(cukr),sd(cukr)),col=2)
#  Jakou uvazovat normalizujici transformaci? Mohu puzit logaritmus?
prom1.tr<-sqrt((prom1-min(prom1))/(max(prom1)-min(prom1)))
#  Jakou uvazovat normalizujici transformaci? Mohu puzit logaritmus?
cukr.tr<-sqrt((cukr-min(cukr))/(max(cukr)-min(cukr)))
PlotQQ(cukr.tr)
hist(cukr.tr, main='Histogram',xlab='Cukr',ylab='hustota', col='skyblue',border='darkblue',freq=F)
lines(x<-seq(0,30,by=0.02),dnorm(x,mean(cukr,tr),sd(cukr.tr)),col=2)
lines(x<-seq(0,1,by=0.0002),dnorm(x,mean(cukr,tr),sd(cukr.tr)),col=2)
lines(x<-seq(0,1,by=0.0002),dnorm(x,mean(cukr.tr),sd(cukr.tr)),col=2)
Q1<- quantile(cukr.tr,1/4)
Q3<- quantile(cukr.tr,3/4)
Q3+3*IQR(cukr.tr)
Q3+1.5*IQR(cukr.tr)
mez<-Q3+1.5*IQR(cukr.tr)
cukr.tr[cukr.tr>mez]
cukr[cukr.tr>mez]
#############################
## Vztah dvou kategorickych promennych popisujeme kontingencni tabulkou
# Souvisi spolu skupina a koureni?
prom2<-Stulong$Skupina
prom3<-Stulong$KOURrisk
(tab<-table(prom2,prom3))
# mozna lepe videt z relativnich cetnosti
addmargins(prop.table(tab))
addmargins(prop.table(tab,1))
addmargins(prop.table(tab,2))
(tab<-table(prom2,prom3))
#mozna lepe videt z relativnich cetnosti
addmargins(prop.table(tab))
addmargins(prop.table(tab,1))
# Souvisi spolu skupina a konzumace vina?
prom2<-Stulong$Skupina
prom2<-Stulong$vino
(tab<-table(prom2,prom3))
addmargins(prop.table(tab,1))
# Souvisi spolu skupina a konzumace vina?
prom2<-Stulong$Skupina
prom2<-Stulong$vino
(tab<-table(prom2,prom3))
addmargins(prop.table(tab,1))
prom2<-Stulong$Skupina
prom3<-Stulong$vino
(tab<-table(prom2,prom3))
addmargins(prop.table(tab,1))
# Jaky je vztah mezi vahou a vyskou?
prom4<-Stulong$vaha
prom5<-Stulong$vyska
plot(prom4~prom5,pch=19,main="Rozptylovy graf",xlab="Dodaci doba",ylab="Teplota pizzy")
plot(prom4~prom5,pch=19,main="Rozptylovy graf",xlab="Vyska v cm",ylab="Vaha v kg")
cov(prom4,prom5,use="complete.obs")
# co Vam rika kovariance
cor(prom4,prom5,use="complete.obs")
# A co je korelacni tabulka?
prom4.c <- factor(ifelse(prom4<=60, '<60', ifelse(prom4<=70, '60-70',
ifelse(prom4<=80, '70-80', ifelse(prom4<=90, '80-90',
ifelse(prom4<=100, '90-100',ifelse(prom4<=110, '100-110',
ifelse(prom4<=120, '110-120',ifelse(prom4<=130, '120-130','>130')))))))),
levels=c("<60","60-70","70-80","80-90","90-100","100-110","110-120","120-130",">130"))
# co Vam rika kovariance
cor(prom4,prom5,use="complete.obs")
cov(prom4,prom5,use="complete.obs")
# A co je korelacni tabulka?
prom4.c <- factor(ifelse(prom4<=60, '<60', ifelse(prom4<=70, '60-70',
ifelse(prom4<=80, '70-80', ifelse(prom4<=90, '80-90',
ifelse(prom4<=100, '90-100',ifelse(prom4<=110, '100-110',
ifelse(prom4<=120, '110-120',ifelse(prom4<=130, '120-130','>130')))))))),
levels=c("<60","60-70","70-80","80-90","90-100","100-110","110-120","120-130",">130"))
prom5.c <- factor(ifelse(prom5<=160, '<160', ifelse(prom5<=165, '160-165',
ifelse(prom5<=170, '165-170', ifelse(prom5<=175, '170-175',
ifelse(prom5<=180, '175-180', ifelse(prom5<=185, '180-185',
ifelse(prom5<=190,'185-190',ifelse(prom5<=195,'190-195','>195')))))))),
levels=c("<160","160-165","165-170","170-175","175-180","180-185","185-190","190-195",">195"))
table(prom4.c,prom5.c)
#Nechť náhodná proměnná jest x N(2,5) - směrodatná rozptylka a rozptyl
# Stanovte kvartily  této proměnné a lvartilové rozpětí, to interpretujte.
# qnorm(x,mu,sigma) - kvantilova funkce
#hledáme první, druhý a třetí kvartil -
qnorm(c(1/4,1/2,3/4),2,sqrt(5))
qnorm(3/4,2,sqrt(5)) - qnorm(1/4,2,sqrt(5))
help(qlnorm)
qlnorm(0,95,6,sqrt(2))
qlnorm(0.95,6,sqrt(2))
# Pojištění
qlnorm(1/2, 6, sqrt(2))
qlnorm(0.95,6,sqrt(2))
1-pnorm(0.5)
pnorm(0.5)
help(pnorm)
1-pnorm(-1.2)
pnorm(-1.2)
1-pnorm(0.5)
pnorm(0.5)
1-pnorm(0.5, 3, 2)
1-pnorm(0.5, 2, 3)
1-pnorm(-1.2,2,3)
pnorm(-1.2,2,3)
pnorm(1,2,3) - 1-pnorm(-0.5,2.3)
pnorm(1,2,3) - (1-pnorm(-0.5,2.3))
pnorm(1,2,3) - pnorm(-0.5,2.3)
pnorm(-0.5,2,3) - pnorm(1,2,3)
abs(pnorm(-0.5,2,3) - pnorm(1,2,3))
pnorm(1,2,3) - pnorm(-0.5,2.3)
pnorm(1,2,3) - pnorm(-0.5,2.3)
abs(pnorm(-0.5,2,3) - pnorm(1,2,3))
pnorm(1,2,3) - pnorm(-0.5,2,3)
# X(20,25) -> U = X-u/sd(x) -> X-20/5  U má střední hodnotu 20 a směrodatnou odchylku 1
(1.645*5)+20
help(pexp)
#Exponenciální - střední doba = 1/lambda
# P(x<=1000) = 0.1 -> <= znamená distribuční fce pexp -> 1-exp(-int*t)
int = -log(0.9/1000)
#Exponenciální - střední doba = 1/lambda
# P(x<=1000) = 0.1 -> <= znamená distribuční fce pexp -> 1-exp(-int*t)
int = -log(0.9)/1000
1/int
#1/int jest střední hodnota
1/int*int
#1/int jest střední hodnota
1/(int*int)
curve(dexp(x,int),from=0,to=20000, main="Hustota exp(0,000105)", col='red')
curve(dexp(x,int),from=0,to=1000000, main="Hustota exp(0,000105)", col='red')
curve(dexp(x,int),from=0,to=100000, main="Hustota exp(0,000105)", col='red')
help(dexp)
#P(X>365)=1-dexp(365,int)
1-dexp(365,int)
#P(X>365)=1-dexp(365,int)
1-pexp(365,int)
#P(200<x<700)
pexp(700,int) - pexp(200,int)
#2000 dní střední hodnota
1/2000
1-pexp(3000,1/2000)
pexp(2000,1/2000)
dexp(0.95,2000,1/2000)
dexp(0.95)
qexp(0.95,1/2000)
qexp(0.05,1/2000)
qexp(0.005,1/2000)
