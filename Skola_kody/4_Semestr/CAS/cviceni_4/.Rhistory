#Autokorelacni a parcialni autokorelacni funkce
data(lh)
#Luteinizing Hormone in Blood Samples
plot(lh)
#autokovariancni funkce
acf(lh,type="covariance")
acf(lh,type="covariance",plot=F)
#vypis hodnot, prvni z nich je rozptyl rady
#autokorelacni funkce
acf(lh)
acf(lh,plot=F)
#opet si muzeme nechat hodnoty vypsat
#parcialni autokorelacni funkce
pacf(lh)
#parcialni autokorelacni funkce
pacf(lh,plot=F)
#ktere korelace jsou nenulove? Ktare modely pripadaji pro radu v uvahu?
par(mfrow=c(2,1))
acf(lh);pacf(lh)
par(mfrow=c(1,1))
#test na nulovost autokorelacni funkce
Box.test(lh, lag=2, type="Ljung-Box")
par(mfrow=c(1,1))
acf(lh);pacf(lh)
#parcialni autokorelacni funkce
pacf(lh,plot=F)
n <- length(lh)
sigma <- sqrt(1/n)*sum(pacf(lh,plot=F))
r1 <- acf(lh, plot=F)
r1 <- acf(lh, plot=F)[2]
sigma <- sqrt(1+2sum(r1**2)/n)
sigma <- sqrt(1+2*sum(r1**2)/n)
View(r1)
r1 <- acf(lh, plot=F)
r1 <- acf(lh, plot=F)[acf]
n <- length(lh)
r1 <- acf(lh, plot=F)$acf[2]
sigma <- sqrt(1+2*sum(r1**2)/n)
2*sigma
sigma
n <- length(lh)
r1 <- acf(lh, plot=F)$acf2
sigma <- sqrt(1+2*sum(r1**2)/n)
sigma
2*sigma
r1 <- acf(lh, plot=F)$acf2[2]
sigma <- sqrt(1+2*sum(r1**2)/n)
sigma
2*sigma
n <- length(lh)
r1 <- acf(lh, plot=F)$acf2[2]
sigma <- sqrt(1+2*sum(r1**2)/n)
sigma
2*sigma
n <- length(lh)
r1 <- acf(lh, plot=F)$acf2[2]
sigma <- sqrt((1+2*sum(r1^2))/n)
sigma
2*sigma
n <- length(lh)
r1 <- acf(lh, plot=F)$acf2[2]
sigma <- sqrt((1+2*(r1^2))/n)
sigma
2*sigma
#Autokorelacni a parcialni autokorelacni funkce
data(lh)
#Luteinizing Hormone in Blood Samples
plot(lh)
n <- length(lh)
r1 <- acf(lh, plot=F)$acf2[2]
sigma <- sqrt((1+2*(r1^2))/n)
sigma
2*sigma
n <- length(lh)
r1 <- acf(lh, plot=F)$acf[2]
sigma <- sqrt((1+2*(r1^2))/n)
sigma
2*sigma
#pomoci funkce arima.sim(n = ,list(ar = ,ma = )) nasimulujte rady typu
#MA(1) s parametrem theta1 = 0.75
#MA(1) s parametrem theta1 = -0.75
#MA(1) s parametrem theta1 = 1.5
#AR(1) s parametrem phi1 = 0.75
#AR(1) s parametrem phi1 = - 0.75
#AR(1) s parametrem phi1 = 1.5
#podivejte se, jak rady vypadaji a jak vypadaji jejich autokoelacni a parcialni autokorelacni funkce
arima.sim(n=100, ma=0.75)
#pomoci funkce arima.sim(n = ,list(ar = ,ma = )) nasimulujte rady typu
#MA(1) s parametrem theta1 = 0.75
#MA(1) s parametrem theta1 = -0.75
#MA(1) s parametrem theta1 = 1.5
#AR(1) s parametrem phi1 = 0.75
#AR(1) s parametrem phi1 = - 0.75
#AR(1) s parametrem phi1 = 1.5
#podivejte se, jak rady vypadaji a jak vypadaji jejich autokoelacni a parcialni autokorelacni funkce
arima.sim(100,list(ma=0.75))
help(arima.sim)
#pomoci funkce arima.sim(n = ,list(ar = ,ma = )) nasimulujte rady typu
#MA(1) s parametrem theta1 = 0.75
#MA(1) s parametrem theta1 = -0.75
#MA(1) s parametrem theta1 = 1.5
#AR(1) s parametrem phi1 = 0.75
#AR(1) s parametrem phi1 = - 0.75
#AR(1) s parametrem phi1 = 1.5
#podivejte se, jak rady vypadaji a jak vypadaji jejich autokoelacni a parcialni autokorelacni funkce
arima.sim(n=100,list(ma=0.75))
acf(lh1)
#pomoci funkce arima.sim(n = ,list(ar = ,ma = )) nasimulujte rady typu
#MA(1) s parametrem theta1 = 0.75
#MA(1) s parametrem theta1 = -0.75
#MA(1) s parametrem theta1 = 1.5
#AR(1) s parametrem phi1 = 0.75
#AR(1) s parametrem phi1 = - 0.75
#AR(1) s parametrem phi1 = 1.5
#podivejte se, jak rady vypadaji a jak vypadaji jejich autokoelacni a parcialni autokorelacni funkce
lh1 <-  arima.sim(n=100,list(ma=0.75))
acf(lh1)
#pomoci funkce arima.sim(n = ,list(ar = ,ma = )) nasimulujte rady typu
#MA(1) s parametrem theta1 = 0.75
#MA(1) s parametrem theta1 = -0.75
#MA(1) s parametrem theta1 = 1.5
#AR(1) s parametrem phi1 = 0.75
#AR(1) s parametrem phi1 = - 0.75
#AR(1) s parametrem phi1 = 1.5
#podivejte se, jak rady vypadaji a jak vypadaji jejich autokoelacni a parcialni autokorelacni funkce
lh1 <-  arima.sim(n=100,list(ma=0.75))
acf(lh1)
pacf(lh1)
#pomoci funkce arima.sim(n = ,list(ar = ,ma = )) nasimulujte rady typu
#MA(1) s parametrem theta1 = 0.75
#MA(1) s parametrem theta1 = -0.75
#MA(1) s parametrem theta1 = 1.5
#AR(1) s parametrem phi1 = 0.75
#AR(1) s parametrem phi1 = - 0.75
#AR(1) s parametrem phi1 = 1.5
#podivejte se, jak rady vypadaji a jak vypadaji jejich autokoelacni a parcialni autokorelacni funkce
lh1 <-  arima.sim(n=100,list(ma=0.75))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <-  arima.sim(n=100,list(ma= -0.75))
#
lh1 <-  arima.sim(n=100,list(ma= -0.75))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <- arima.sim(n=100,list(ma=1.5))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <-  arima.sim(n=100,list(ar=0.75))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <-  arima.sim(n=100,list(ar=-0.75))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <- arima.sim(n=100,list(ar=1.5))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <- arima.sim(n=100,list(ar=1.5))
#pomoci funkce arima.sim(n = ,list(ar = ,ma = )) nasimulujte rady typu
#MA(1) s parametrem theta1 = 0.75
#MA(1) s parametrem theta1 = -0.75
#MA(1) s parametrem theta1 = 1.5
#AR(1) s parametrem phi1 = 0.75
#AR(1) s parametrem phi1 = - 0.75
#AR(1) s parametrem phi1 = 1.5
#podivejte se, jak rady vypadaji a jak vypadaji jejich autokoelacni a parcialni autokorelacni funkce
lh1 <-  arima.sim(n=100,list(ma=0.75))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <-  arima.sim(n=100,list(ma= -0.75))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <- arima.sim(n=100,list(ma=1.5))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <-  arima.sim(n=100,list(ar=0.75))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <-  arima.sim(n=100,list(ar=-0.75))
plot(lh1)
acf(lh1)
pacf(lh1)
#
lh1 <- arima.sim(n=100,list(ar=1.5))
#
bs <- rnorm(100)
z <- rep(0,100)
for (i in 2:100){z[i]<-1.5*z[i-1]+bs[i]}
ts.z <-ts(z)
plot(z)
