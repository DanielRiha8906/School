###########################
library(MASS)
## Diskriminacni analyza
Iris <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]),Sp = rep(c("s","c","v"), rep(50,3)))
# databaze o trech druzich kosatcu: Setosa (s), Versicolour (c), Virginica (v)
# mereny jsou 4 ukazatele: sepal length & width, petal length & width
#	kalisni a okvetni listek, vzdy delka a sirka
train <- sample(1:150, 75)
# nahodny vyber 75 rostlin z cele databaze
table(Iris$Sp[train])
# vstupni data do diskriminacni analyzy ... rostliny, u nichz presne zname druh
(z <- lda(Sp ~ ., Iris, prior = c(1,1,1)/3, subset = train))
#linearni diskriminacni analyza
#vystup: vstupni (apriori) pravdepodobnosti ... jake je ocekavane zastoupeni skupin v populaci
#prumery promennych ve skupinach a koeficienty linearnich diskriminacnich funkci
predict(z, Iris[-train, ])$x
#vysledne hodnoty diskriminacnich funkci
predict(z, Iris[-train, ])$posterior
#pravdepodobnosti zarazeni do jednotlivych populaci
predict(z, Iris[-train, ])$class
#na zaklade vytvorene klasifikacni funkce priradi nova mereni do skupin
#vybere idealni skupinu + vypocte pravdespodobnosti s nimiz do jednotlivych skupin patri
table(Iris[-train,"Sp"],predict(z, Iris[-train, ])$class)
#vyzkousejte si na datech z bipsie
data("biopsy")
view(viopsy)
View(viopsy)
View(biopsy)
View(biopsy)
table(biopsy$class)
train <- sample(1:699, 559)
Sp = c(benign, malignant)
Sp = c('benign', 'malignant')
(z <- lda(Sp ~ ., biopsy, prior = c(1,1,1)/3, subset = train))
(z <- lda(Sp ~ biopsy[2:10], biopsy, prior = c(1,1,1)/3, subset = train))
#vyzkousejte si na datech z bipsie
data("biopsy")
table(biopsy$class)
Sp <- c('benign', 'malignant')
train <- sample(1:699, 559)
z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9 + V10, biopsy, prior = c(1,1,1)/3, subset = train)
z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy, prior = c(1,1,1)/3, subset = train)
#jak vypada diskriminacni funkce rozlisujici zhoubny a nezhoubny nador
lda?
#########################
##Shlukova analyza
#Budem delit americke staty do skupin na zaklade 4 ukazatelu: vrazdy, napadeni, populace, znasilneni
hc <- hclust(dist(USArrests), "ave")
#jak vypada diskriminacni funkce rozlisujici zhoubny a nezhoubny nador
help(lda)
z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy, subset = train)
z
predict(z, biopsy[-train, ])$x
z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy,prior = c(1,1)/2, subset = train)
predict(z, biopsy[-train, ])$x
Sp <- c('benign', 'malignant')
train <- sample(1:699, 200)
z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy,prior = c(1,1)/2, subset = train)
predict(z, biopsy[-train, ])$x
predict(z, biopsy[-train, ])$posterior
predict(z, biopsy[-train, ])$class
table(biopsy[-train,"Sp"],predict(z, biopsy[-train, ])$class)
table(biopsy[-train,"Sp"],predict(z, biopsy[-train, ])$class)
train <- sample(1:699, 200)
z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy,prior = c(1,1)/2, subset = train)
predict(z, biopsy[-train, ])$x
predict(z, biopsy[-train, ])$posterior
predict(z, biopsy[-train, ])$class
table(biopsy[-train,"Sp"],predict(z, biopsy[-train, ])$class)
table(biopsy[-train,"Sp"],predict(z, biopsy[-train, ])$class)
table(biopsy[-train,"Sp"])
x <- table(biopsy[-train,"Sp"])
View(x)
x <- table(biopsy[-train,Sp])
View(biopsy)
#vyzkousejte si na datech z bipsie
data("biopsy")
table(biopsy$class)
Sp <- c('benign', 'malignant')
train <- sample(1:699, 200)
z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy,prior = c(1,1)/2, subset = train)
View(z)
z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy,prior = c(1,1)/2, subset = train)
View(z)
train <- sample(1:699, 200)
z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy,prior = c(1,1)/2, subset = train)
View(z)
train <- sample(1:699, 200)
z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy,prior = c(1,1)/2, subset = train)
View(z)
h <- predict(z, biopsy[-train, ])$class
View(h)
table(biopsy[-train,"Sp"],predict(z, biopsy[-train, ])$class)
nrow(table(biopsy[-train,"Sp"]))
ncol(table(biopsy[-train,"Sp"]))
ncol(table(biopsy[-train,Sp]))
p1 <- predict(z, biopsy[-train,]$class)
#vyzkousejte si na datech z bipsie
data("biopsy")
View(biopsy)
summary(biopsy)
train <- sample(1:dim(biopsy),100)
(z <- lda(Sp ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, Iris, prior = c(1,1)/2, subset = train))
(z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, Iris, prior = c(1,1)/2, subset = train))
(z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy, prior = c(1,1)/2, subset = train))
predict(z, biopsy[-train, ])$class
table(biopsy[-biopsy,"class"],predict(z, biopsy[-train, ])$class)
table(biopsy[-biopsy,class],predict(z, biopsy[-train, ])$class)
table(biopsy[-biopsy, ],predict(z, biopsy[-train, ])$class)
table(biopsy[-train,class],predict(z, biopsy[-train, ])$class)
table(biopsy[-train,'class'],predict(z, biopsy[-train, ])$class)
train <- sample(1:dim(biopsy),559)
(z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy, prior = c(1,1)/2, subset = train))
predict(z, biopsy[-train, ])$class
table(biopsy[-train,'class'],predict(z, biopsy[-train, ])$class)
data("iris3")
View(iris3)
train <- sample(1:dim(biopsy),559)
(z <- lda(class ~ V1 + V2 + V3 + V4 + V5 + V6 + V7 + V8 + V9, biopsy, prior = c(1,1)/2, subset = train))
predict(z, biopsy[-train, ])$class
table(biopsy[-train,'class'],predict(z, biopsy[-train, ])$class)
#Budem delit americke staty do skupin na zaklade 4 ukazatelu: vrazdy, napadeni, populace, znasilneni
hc <- hclust(dist(USArrests), "ave")
#hierarchicke clusterovani metodou average linkage
#vstupem je matice vzdalenosti jednotlivych bodu
plot(hc, hang = -1)
#hierarchicke clusterovani metodou average linkage
#vstupem je matice vzdalenosti jednotlivych bodu
plot(hc)
#hierarchicke clusterovani metodou average linkage
#vstupem je matice vzdalenosti jednotlivych bodu
plot(hc, hang = -1)
#hierarchicke clusterovani metodou average linkage
#vstupem je matice vzdalenosti jednotlivych bodu
plot(hc, hang = -5)
#nakresleni dendrogramu - postup, jak shlukuje
#nejprve ma kazde pozorovani svou vlastni skupinu, a ty se pak spojuji do vetsich celku
#mozny je i obraceny postup, tj. od jedne velke skupiny k mnoha malym
seg<-cutree(hc,k=4)
#rozdeli data do 4 skupin
rect.hclust(hc, k=4, border="red")
#Jak vypadaji segmenty v datech?
#v datech mam jen 4 promenne, mohu si nechat vykreslit
plot(USArrests$Murder,USArrests$Assault,col=seg,pch=19)
plot(USArrests$UrbanPop,USArrests$Assault,col=seg,pch=19)
plot(USArrests$Rape,USArrests$Assault,col=seg,pch=19)
USArrests.sc<-scale(USArrests)
#spocitame standardiyovane promenne
hc.sc <- hclust(dist(USArrests.sc), "ave")
plot(hc.sc, hang = -1)
#zde jsou videt 2 velke skupiny nebo 5 mensich
seg.sc<-cutree(hc.sc,k=5)
#rozdeli data do 5 skupin
table(seg,seg.sc)
plot(USArrests$Murder,USArrests$Assault,col=seg.sc,pch=19)
plot(USArrests$UrbanPop,USArrests$Rape,col=seg.sc,pch=19)
#V praxi se casteji pouziva metoda complete linkage
hc.sc2 <- hclust(dist(USArrests.sc))
plot(hc.sc2, hang = -1)
#zde mi dendogram jasne deli data na 4 skupiny
seg.sc2<-cutree(hc.sc2,k=4)
#rozdeli data do 4 skupin
table(seg,seg.sc2)
table(seg.sc,seg.sc2)
#Zakresleni aktualniho deleni do skupin
plot(USArrests$Murder,USArrests$Assault,col=seg.sc2,pch=19)
plot(USArrests$UrbanPop,USArrests$Rape,col=seg.sc2,pch=19)
plot(pc[,1],pc[,2],col=seg.sc2,pch=19)
#je mozne vysledne segmenty popsat pomoci puvodnich promennych
tapply(USArrests$Murder,as.factor(seg.sc2),mean)
tapply(USArrests$Assault,as.factor(seg.sc2),mean)
tapply(USArrests$UrbanPop,as.factor(seg.sc2),mean)
tapply(USArrests$Rape,as.factor(seg.sc2),mean)
seg.km <- kmeans(USArrests.sc, 4)
table(seg.sc2,seg.km$cluster)
#jak vychazi metoda K-means v porovnani s hierarchickym shlukovanim
plot(USArrests$Murder,USArrests$Assault,col=seg.km$cluster,pch=19)
plot(USArrests$UrbanPop,USArrests$Rape,col=seg.km$cluster,pch=19)
plot(pc[,1],pc[,2],col=seg.km$cluster,pch=19)
#rozlozeni do skupin je velmi podobne
seg.km$centers
#vyzkousejte si na datech o krabech
data("crabs")
#vyzkousejte si na datech o krabech
data("crabs")
View(crabs)
# Není tam nějaká hodnota až moc velká -> nescaluji
crabs.hc <- hclust(dist(crabs))
plot(hc, hang = -1)
plot(crabs.hc, hang = -1)
#Jelikož interpretace je na mne, tak si to rozdělím do 4 skupin
seg.sc<-cutree(crabs.hc,k=4)
table(seg,seg.sc)
table(crabs.hc,seg.sc)
plot(crabs$FL,USArrests$Assault,col=seg,pch=19)
plot(crabs$FL,crabs$RW,col=seg,pch=19)
plot(crabs$CL,crabs$RW,col=seg,pch=19)
plot(crabs$CW,crabs$RW,col=seg,pch=19)
plot(crabs$BD,crabs$RW,col=seg,pch=19)
##Kanonicka korelace
#korelace mezi dvema skupinami promennych
#pracujme s charakteristikami statu: osobni uspory, podil populace do 15 let,
#podil populace nad 75 let, prijem na obyvatele, narust prijmu na obyvatele
#rozdelime promenne do skupin: populacni podily, ekonomicke charakteristiky
pop <- LifeCycleSavings[, 2:3]
#vyzkousejte si na datech o krabech
data("crabs")
View(crabs)
crabs.sc <-scale(crabs[,4:8])
crabs.hc<-hclust(dist(crabs.sc))
plot(crabs.hc)
seg<-cutree(crab.hc,k=4)
crabs.hc<-hclust(dist(crabs.sc))
plot(crabs.hc)
seg<-cutree(crab.hc,k=4)
seg<-cutree(crabs.hc,k=4)
rect.hclust(crabs.hc, k=4, border="red")
plot(crabs$FL,crabs$RW,col=seg,pch=19)
plot(crabs$CL,crabs$RW,col=seg,pch=19)
table(crabs$sp, seg)
table(crabs$sex, seg)
prcomp(crabs.sc)$x
plot(crabs.hc$FL,crabs$RW,col=seg,pch=19)
plot(crabs.hc$FL,crabs.hc$RW,col=seg,pch=19)
plot(crabs.hc$CL,crabs.hc$RW,col=seg,pch=19)
plot(crabs.sc$FL,crabs.sc$RW,col=seg,pch=19)
plot(crabs.sc$CL,crabs.sc$RW,col=seg,pch=19)
plot(crabs$FL,crabs$RW, col=seg)
plot(crabs$CL, crabs$CW, col =seg)
pc<-prcomp(crabs,scale=T)$x
pc<-prcomp(crabs.sc,scale=T)$x
plot(pc[,1],pc[,2],col=seg.sc,pch=19)
seg.km$centers
seg.km <- kmeans(crabs.sc, 4)
table(seg,seg.km$cluster)
seg.km$centers
plot(crabs.sc$CL,crabs.sc$CW,col=seg.km$cluster,pch=19)
plot(crabs.sc,crabs.sc,col=seg.km$cluster,pch=19)
plot(crabs$CL,crabs$CW,col=seg.km$cluster,pch=19)
plot(pc[,1],pc[,2],col=seg.km$cluster,pch=19)
pc<-prcomp(crabs.sc,scale=T)$x
plot(pc[,1],pc[,2],col=seg.sc,pch=19)
plot(pc[,1],pc[,2],col=seg.km$cluster,pch=19)
seg.km <- kmeans(crabs.sc, 3)
table(seg,seg.km$cluster)
plot(crabs$CL,crabs$CW,col=seg.km$cluster,pch=19)
plot(USArrests$UrbanPop,USArrests$Rape,col=seg.km$cluster,pch=19)
plot(pc[,1],pc[,2],col=seg.km$cluster,pch=19)
seg.km$centers
seg.km <- kmeans(crabs.sc, 2)
table(seg,seg.km$cluster)
plot(crabs$CL,crabs$CW,col=seg.km$cluster,pch=19)
plot(pc[,1],pc[,2],col=seg.km$cluster,pch=19)
pc <- prcomp(crabs.sc, scale = TRUE)
seg.pc <- kmeans(pc$x[, 1:2], centers = 4)$cluster
plot(pc$x[,1], pc$x[,2], col = seg.pc, pch = 19, main = "PCA - Skupiny")
pc<-prcomp(crabs.sc,scale=T)$x
plot(pc[,1],pc[,2],col=seg.sc,pch=19)
