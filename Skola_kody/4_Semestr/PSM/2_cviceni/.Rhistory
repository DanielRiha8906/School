##############################
## Nacteni databaze o autech
force(mtcars)
data(mtcars)
View(mtcars)
library(DescTools)
# Lisi se ujeta vzdalenost v zavislosti na typu motoru?
cislo<-mtcars$mpg
kategorie<-mtcars$vs
# Normalita se testuje pro kazdou skupinu zvlast
# H0: data maji normalni rozdeleni vs. H1: data nemaji normalni rozdeleni
par(mfrow=c(1,2))
tapply(cislo,kategorie,PlotQQ)
par(mfrow=c(1,1))
# body lezi v obou pripadech priblizne na primce
tapply(cislo,kategorie,shapiro.test)
#nejprve graficke zobrazeni
boxplot(cislo~kategorie,main="Sila vozu podle typu prevodovky",col=c(3,4))
#Test shody rozptylu - i neparametricky test ocekava priblizne stejne rozptyly
#H0: rozptyly se nelisi; H1: rozptyly se lisi
var.test(cislo~kategorie)
#Mame na vyber dva dvouvyberove t-testy:
#pro shodne rozptyly
#pro ruzne rozptyly
#Jsou rozptyly shodne?
#H0: rozptyly se nelisi; H1: rozptyly se lisi
var.test(cislo~kategorie)
#p-hodnota = 0.1997 > alfa (0.05) -> nezamitame H0
#rozptyly jsou priblizne shodne, pouzijeme t-test pro shodne rozptyly
t.test(cislo~kategorie,var.eq=T)
t.test(cislo~kategorie,mu=0,alternative="two.sided",var.eq=T)
#obe p-hodnoty > alfa -> nezamitame H0,
#data maji priblizne normalni rozdeleni -> pouziji t-test
#nejprve graficke zobrazeni
boxplot(cislo~kategorie,main="Ujeta vzdalenost podle typu motoru",col=c(3,4))
#Spojitost s intervalem spolehlivosti pro rozdil
MeanDiffCI(cislo~kategorie)
##Zavisi sila vozu na typu prevodovky?
cislo<-mtcars$hp
kategorie<-mtcars$am
#Test normality
# H0: data maji normalni rozdeleni vs. H1: data nemaji normalni rozdeleni
par(mfrow=c(1,2))
tapply(cislo,kategorie,PlotQQ)
par(mfrow=c(1,1))
#u manualni prevodovky je zrejma odchylka od normality
tapply(cislo,kategorie,shapiro.test)
#nejprve graficke zobrazeni
boxplot(cislo~kategorie,main="Sila vozu podle typu prevodovky",col=c(3,4))
#Test shody rozptylu - i neparametricky test ocekava priblizne stejne rozptyly
#H0: rozptyly se nelisi; H1: rozptyly se lisi
var.test(cislo~kategorie)
#p-hodnota = 0.08622 > alfa (0.05) -> nezamitame H0
#rozptyly jsou priblizne shodne - predpoklad splnen
wilcox.test(cislo~kategorie)
#p-hodnota = 0.08622 > alfa (0.05) -> nezamitame H0
#rozptyly jsou priblizne shodne - predpoklad splnen
wilcox.test(cislo~kategorie)
#T-test by rozdil nevidel
t.test(cislo~kategorie)
#p-hodnota = 0.08622 > alfa (0.05) -> nezamitame H0
#rozptyly jsou priblizne shodne - predpoklad splnen
wilcox.test(cislo~kategorie)
#T-test by rozdil nevidel
t.test(cislo~kategorie)
#Jsou vozy s motory do V silnejsi? (promenne hp, vs)
cislo <- mtcars$hp
kategorie <- mtcars$vs
par(mfrow=c(1,2))
tapply(cislo,kategorie,PlotQQ)
par(mfrow=c(1,1))
#Jsou vozy s motory do V silnejsi? (promenne hp, vs)
cislo <- mtcars$hp
kategorie <- mtcars$vs
par(mfrow=c(1,2))
tapply(cislo,kategorie,PlotQQ)
par(mfrow=c(1,1))
tapply(cislo,kategorie,shapiro.test)
boxplot(cislo~kategorie,main="Síla motoru dle tvaru motoru",col=c(3,4))
var.test(cislo~kategorie)
t.test(cislo~kategorie)
par(mfrow=c(1,2))
par(mfrow=c(1,1))
tapply(cislo,kategorie,shapiro.test)
#Jsou vozy s motory do V silnejsi? (promenne hp, vs)
cislo <- mtcars$hp
kategorie <- mtcars$vs
par(mfrow=c(1,2))
tapply(cislo,kategorie,PlotQQ)
par(mfrow=c(1,1))
tapply(cislo,kategorie,shapiro.test)
boxplot(cislo~kategorie,main="Síla motoru dle tvaru motoru",col=c(3,4))
var.test(cislo~kategorie)
#P = 0.002002 -> Zamitam h0, plati H1
t.test(cislo~kategorie)
# p = 1.82e-06 -> zamítám H0, platí H1
wilcox.test(cislo~kategorie, alternative ='greater')
#Jsou vozy s automatickou prevodovkou tezsi? (promenne wt, am)
cislo <- mtcars$wt
kategorie <- mtcars$am
par(mfrow=c(1,2))
tapply(cislo,kategorie,PlotQQ)
par(mfrow=c(1,1))
boxplot(cislo~kategorie,main="Síla motoru dle tvaru motoru",col=c(3,4))
tapply(cislo,kategorie,PlotQQ)
#Jsou vozy s automatickou prevodovkou tezsi? (promenne wt, am)
cislo <- mtcars$wt
kategorie <- mtcars$am
par(mfrow=c(1,2))
tapply(cislo,kategorie,PlotQQ)
par(mfrow=c(1,1))
boxplot(cislo~kategorie,main="Síla motoru dle tvaru motoru",col=c(3,4))
wilcox.test(cislo~kategorie, alternative ='greater')
wilcox.test(cislo~kategorie, alternative ='less')
# p = 1.82e-06 -> zamítám H0, platí H1
wilcox.test(cislo~kategorie, alternative ='greater')
#Jsou vozy s motory do V silnejsi? (promenne hp, vs)
cislo <- mtcars$hp
kategorie <- mtcars$vs
par(mfrow=c(1,2))
tapply(cislo,kategorie,PlotQQ)
par(mfrow=c(1,1))
tapply(cislo,kategorie,shapiro.test)
boxplot(cislo~kategorie,main="Síla motoru dle tvaru motoru",col=c(3,4))
var.test(cislo~kategorie)
# p = 1.82e-06 -> zamítám H0, platí H1
wilcox.test(cislo~kategorie, alternative ='greater')
#Jsou vozy s automatickou prevodovkou tezsi? (promenne wt, am)
cislo <- mtcars$wt
kategorie <- mtcars$am
par(mfrow=c(1,2))
tapply(cislo,kategorie,PlotQQ)
par(mfrow=c(1,1))
boxplot(cislo~kategorie,main="Síla motoru dle tvaru motoru",col=c(3,4))
#když jsem hodil less, mám z toho P-value 1, takže auto s manuální převodovkou je lehčí.
wilcox.test(cislo~kategorie, alternative ='greater')
#když jsem hodil less, mám z toho P-value 1, takže auto s manuální převodovkou je lehčí.
wilcox.test(cislo~kategorie, alternative ='less')
wilcox.test(cislo~kategorie, alternative ='greater')
#########################################
## ANOVA - analyza rozptylu
#U ANOVVY DŮLEŽITÉ, ZMĚNIT NA KATEGORICKOU PROMĚNNOU, POUŽÍVÁ SE REGRESE MOHLO BY SE TO FUCK-UPNOUT!
#Lisi se cas, za nějž ujedou auta 1/4 mile podle poctu valcu?
cislo<-mtcars$qsec
kategorie<-as.factor(mtcars$cyl)
#Normalita se testuje pro residua linearniho modelu
#H0: data maji normalni rozdeleni vs. H1: data nemaji normalni rozdeleni
res<-residuals(lm(cislo~kategorie))
PlotQQ(res)
#body lezi priblizne na primce - data maji priblizne normalni rozdeleni
#Kdo chce, muze i ciselny test, ale neni nutne
shapiro.test(res)
#nejprve graficke zobrazeni
boxplot(cislo~kategorie,main="Cas podle poctu valcu",col="orange")
# Opet je treba otestovat shodu rozptylu
# dle vysledku se voli typ ANOVy
# Test shody rozptylu
# H0: rozptyly se nelisi; H1: rozptyly se lisi
bartlett.test(cislo~kategorie)
#p-hodnota = 0.4554 > alfa (0.05) -> nezamitame H0
#rozptyly jsou priblizne shodne, pouzijeme klasickou ANOVu
anova(aov(cislo~kategorie))
#p-hodnota = 0.4554 > alfa (0.05) -> nezamitame H0
#rozptyly jsou priblizne shodne, pouzijeme klasickou ANOVu
anova(lm(cislo~kategorie))
#p-hodnota = 0.4554 > alfa (0.05) -> nezamitame H0
#rozptyly jsou priblizne shodne, pouzijeme klasickou ANOVu
anova(aov(cislo~kategorie))
#Muze prijit doplnujici otazka: ktere dvojice skupin se od sebe vyznamne lisi?
#parove srovnani
TukeyHSD(aov(cislo~kategorie))
# jen 8 valcu a 4 valce
plot(TukeyHSD(aov(cislo~kategorie)))
## Zavisi pomer os na poctu prevodu?
cislo<-mtcars$drat
kategorie<-as.factor(mtcars$gear)
# Test normality
#   H0: data maji normalni rozdeleni vs. H1: data nemaji normalni rozdeleni
res<-residuals(lm(cislo~kategorie))
PlotQQ(res)
# vidime odchylku od normality
# Mozno potvrdit ciselnym testem
shapiro.test(res)
# nejprve graficke zobrazeni
boxplot(cislo~kategorie,main="Pomer os podle poctu prevodu",col="coral")
# Test shody rozptylu - i neparametricky test ocekava priblizne stejne rozptyly
# H0: rozptyly se nelisi; H1: rozptyly se lisi
bartlett.test(cislo~kategorie)
# p-hodnota = 0.6596 > alfa (0.05) -> nezamitame H0
#   rozptyly jsou priblizne shodne - predpoklad splnen
kruskal.test(cislo~kategorie)
# p-hodnota = 2.242e-05 < alfa (0.05) -> zamitame H0, plati H1
#   pomer os zavisi na poctu prevodu
# Ktera dvojice skupin se od sebe vyznamne lisi?
DunnTest(cislo~kategorie)
# Analyza rozptylu pro pripad, ze se lisi variabilita ve skupinach
oneway.test(cislo~kategorie, var.equal = FALSE)
##################x## Zavisi pomer os na poctu prevodu?
cislo<-mtcars$drat
kategorie<-as.factor(mtcars$gear)
# Test normality
#   H0: data maji normalni rozdeleni vs. H1: data nemaji normalni rozdeleni
res<-residuals(lm(cislo~kategorie))
PlotQQ(res)
#vidime odchylku od normality
#Mozno potvrdit ciselnym testem
shapiro.test(res)
# nejprve graficke zobrazeni
boxplot(cislo~kategorie,main="Pomer os podle poctu prevodu",col="coral")
#Test shody rozptylu - i neparametricky test ocekava priblizne stejne rozptyly
#H0: rozptyly se nelisi; H1: rozptyly se lisi
bartlett.test(cislo~kategorie)
#p-hodnota = 0.6596 > alfa (0.05) -> nezamitame H0
#rozptyly jsou priblizne shodne - predpoklad splnen
kruskal.test(cislo~kategorie)
#p-hodnota = 2.242e-05 < alfa (0.05) -> zamitame H0, plati H1
#pomer os zavisi na poctu prevodu
#Ktera dvojice skupin se od sebe vyznamne lisi?
DunnTest(cislo~kategorie)
#Analyza rozptylu pro pripad, ze se lisi variabilita ve skupinach
oneway.test(cislo~kategorie, var.equal = FALSE)
cislo <- mtcars$mpg
kategorie <- as.factor(mtcars$gear)
res<-residuals(lm(cislo~kategorie))
PlotQQ(res)
shapiro.test(res)
boxplot(cislo~kategorie,main="Pomer os podle poctu prevodu",col="coral")
#vypada to normálne
#Testujeme hypotézu: Všechny skupiny jsou stejné, H1: ne
bartlett.test(cislo~kategorie)
kruskal.test(cislo~kategorie)
DunnTest(cislo~kategorie)
cislo <- mtcars$mpg
kategorie <- as.factor(mtcars$gear)
res<-residuals(lm(cislo~kategorie))
#Testujeme hypotézu: H0: normální rozdělení, H1: ne
PlotQQ(res)
shapiro.test(res)
boxplot(cislo~kategorie,main="Pomer os podle poctu prevodu",col="coral")
#vypada to normálne, nezamítáme h0
#Testujeme hypotézu: Všechny skupiny jsou stejné, H1: ne
bartlett.test(cislo~kategorie)
kruskal.test(cislo~kategorie)
anova(aov(cislo~kategorie))
TukeyHSD(aov(cislo~kategorie))
load("C:/Users/danie/Desktop/Škola/Skola_kody/4_Semestr/PSM/Stulong.RData")
